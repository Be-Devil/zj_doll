package com.imlianai.dollpub.app.modules.support.shopkeeper.cmd;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.ws.rs.Path;

import org.springframework.stereotype.Component;

import com.imlianai.dollpub.app.controller.RootCmd;
import com.imlianai.dollpub.app.modules.support.robot.service.DollRobotService;
import com.imlianai.dollpub.app.modules.support.shopkeeper.service.ShopkeeperService;
import com.imlianai.dollpub.app.modules.support.shopkeeper.vo.ApplyWithdrawCashReqVO;
import com.imlianai.dollpub.app.modules.support.shopkeeper.vo.IncomeRespVO;
import com.imlianai.dollpub.app.modules.support.shopkeeper.vo.RankRespVO;
import com.imlianai.dollpub.domain.shopkeeper.ShopkeeperInfo;
import com.imlianai.dollpub.domain.shopkeeper.ShopkeeperQRCode;
import com.imlianai.dollpub.domain.shopkeeper.ShopkeeperWithdrawRecord;
import com.imlianai.rpc.support.common.cmd.BaseReqVO;
import com.imlianai.rpc.support.common.cmd.BaseRespVO;
import com.imlianai.rpc.support.manager.aspect.annotations.ApiHandle;

/**
 * 我要开店
 *
 * @author wurui
 * @create 2018-04-28 15:16
 **/
@Component("shopkeeper")
@Api(value = "我要开店")
public class CmdShopkeeper extends RootCmd {

    @Resource
    private ShopkeeperService shopkeeperService;

    @Resource
    private DollRobotService dollRobotService;

    @ApiHandle
    @Path("api/shopkeeper/rank")
    @ApiOperation(value = "每日榜单", notes = "每日榜单", response = RankRespVO.class)
    public BaseRespVO rank(BaseReqVO vo) {
        return new RankRespVO(shopkeeperService.getShopkeeperDayRank());
    }

    @ApiHandle
    @Path("api/shopkeeper/applyWithdrawCash")
    @ApiOperation(value = "申请提现", notes = "申请提现", response = BaseRespVO.class)
    public BaseRespVO applyWithdrawCash(ApplyWithdrawCashReqVO vo) {
        return shopkeeperService.applyWithdraw(vo.getUid(), vo.getMoney());
    }

    @ApiHandle
    @Path("api/shopkeeper/getWalletData")
    @ApiOperation(value = "获取店主钱包数据", notes = "我的收入", response = IncomeRespVO.class)
    public BaseRespVO getWalletData(BaseReqVO vo) {
    	shopkeeperService.initShopkeeper(vo.getUid(), 0);
        return shopkeeperService.getShopkeeperWalletInfo(vo.getUid());
    }

    @ApiHandle
    @Path("api/shopkeeper/getWithdrawRecord")
    @ApiOperation(value = "获取提现记录", notes = "我的收入", response = IncomeRespVO.class)
    public BaseRespVO getWithdrawRecord(BaseReqVO vo) {
    	List<ShopkeeperWithdrawRecord> list=shopkeeperService.getWithdrawRecord(vo.getUid());
    	Map<String, Object> map=new HashMap<String, Object>();
		map.put("records",list);
		return new BaseRespVO(map);
    }
    
    @ApiHandle
    @Path("api/shopkeeper/initRobot")
    public BaseRespVO initRobot(BaseReqVO vo) {
        dollRobotService.initRobotUser();
        return new BaseRespVO(0,false,"init");
    }

    @ApiHandle
    @Path("api/shopkeeper/hasInitShop")
    @ApiOperation(value = "是否已开通店铺", notes = "是否已开通店铺", response = BaseRespVO.class)
    public BaseRespVO hasInitShop(BaseReqVO vo) {
    	ShopkeeperInfo info=shopkeeperService.getShopkeeperInfo(vo.getUid());
    	ShopkeeperQRCode qrcode=shopkeeperService.getShopkeeperQRCode(vo.getUid());
    	Map<String, Object> map=new HashMap<String, Object>();
    	map.put("qrcode",qrcode);
    	map.put("info",info);
    	return new BaseRespVO(map);
    }

    @ApiHandle
    @Path("api/shopkeeper/updateStatus")
    @ApiOperation(value = "是否已开通店铺", notes = "是否已开通店铺", response = BaseRespVO.class)
    public BaseRespVO updateStatus(BaseReqVO vo) {
    	shopkeeperService.updateShopkeeperStatus(1, vo.getUid());
        return new BaseRespVO();
    }
    
}
