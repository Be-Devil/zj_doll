package com.imlianai.dollpub.app.modules.core.dice.service;

import com.alibaba.dubbo.config.annotation.Reference;
import com.alibaba.fastjson.JSON;
import com.imlianai.dollpub.app.modules.core.dice.consts.DiceConsts;
import com.imlianai.dollpub.app.modules.core.dice.dao.DiceDao;
import com.imlianai.dollpub.app.modules.core.doll.bus.DollBusService;
import com.imlianai.dollpub.domain.dice.Dice;
import com.imlianai.dollpub.domain.dice.DiceStatus;
import com.imlianai.dollpub.domain.doll.DollBus;
import com.imlianai.dollpub.machine.iface.IMachineConnectRemoteService;
import com.imlianai.rpc.support.common.BaseLogger;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.List;

/**
 * @author wurui
 * @create 2018-06-01 11:55
 **/
@Service
public class DiceServiceImpl implements DiceService {

    BaseLogger logger = BaseLogger.getLogger(getClass());

    @Reference
    private IMachineConnectRemoteService iMachineConnectRemoteService;

    @Resource
    private DollBusService dollBusService;

    @Resource
    private DiceDao diceDao;

    @Override
    public long start(int busId) {
        DollBus dollBus = dollBusService.getDollBus(busId);
        if (dollBus != null && dollBus.getType() == 2){
            //上机
            logger.info("骰子机类型");
            long optId = diceDao.addDiceRecord(new Dice(dollBus.getDeviceId(),dollBus.getBusId()));
            if( optId > 0){
                logger.info("新增骰子记录");
                if(diceDao.addDiceStatus(new DiceStatus()) > 0){
                    logger.info("新增摇骰子上机状态");
                    logger.info("发送要骰子指令");
                    iMachineConnectRemoteService.handleDirective(dollBus.getBusId(), DiceConsts.SHAKE_RETURN,"");
                    return optId;
                }
            }
        }
        return 0;
    }

    @Override
    public boolean isPlay(int busId) {
        boolean result = false;
        DiceStatus diceStatus = diceDao.getDiceStatusByBusId(busId);
        if (diceStatus == null){
            result = true;
        }
        return result;
    }

    @Override
    public void resultHandle(DollBus dollBus, String deviceId, List<String> hexs) {
        DiceStatus diceStatus = diceDao.getDiceStatusByBusId(dollBus.getBusId());
        if (diceStatus != null && diceStatus.getDeviceId().equals(deviceId)){
            Dice dice = diceDao.getDiceByOptId(diceStatus.getOptId());
            if (dice != null && dice.getStatus() == 0){
                int point = Integer.parseInt(hexs.get(4), 16);
                if(diceDao.updateDiceResult(diceStatus.getOptId(),point, JSON.toJSONString(hexs)) > 0){
                    logger.info("骰子=>" + diceStatus.getOptId() + ",结果=>" + point);
                }
            }
        }
        //删除状态
        if(diceDao.deleteDiceStatus(dollBus.getBusId()) > 0){
            logger.info("删除骰子机状态");
        }
    }
}
