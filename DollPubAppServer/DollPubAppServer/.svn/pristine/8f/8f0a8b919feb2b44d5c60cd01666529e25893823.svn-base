package com.imlianai.dollpub.app.modules.support.feedback.cmd;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.annotation.Resource;import javax.ws.rs.Path;import org.springframework.stereotype.Component;import com.imlianai.dollpub.app.configs.AppUtils;import com.imlianai.dollpub.app.controller.RootCmd;import com.imlianai.dollpub.app.modules.support.feedback.service.FeedbackService;import com.imlianai.dollpub.app.modules.support.feedback.vo.FeedBackDetailReqVO;import com.imlianai.dollpub.app.modules.support.feedback.vo.FeedBackDetailRespVO;import com.imlianai.dollpub.app.modules.support.feedback.vo.FeedBackListReqVO;import com.imlianai.dollpub.app.modules.support.feedback.vo.FeedBackListRespVO;import com.imlianai.dollpub.app.modules.support.feedback.vo.FeedBackReplyReqVO;import com.imlianai.dollpub.app.modules.support.feedback.vo.FeedBackReqVO;import com.imlianai.dollpub.domain.feedback.FeedBackStatus;import com.imlianai.dollpub.domain.feedback.Feedback;import com.imlianai.dollpub.domain.feedback.FeedbackNormal;import com.imlianai.dollpub.domain.feedback.FeedbackReply;import com.imlianai.rpc.support.common.cmd.BaseReqVO;import com.imlianai.rpc.support.common.cmd.BaseRespVO;import com.imlianai.rpc.support.common.cmd.ResCodeEnum;import com.imlianai.rpc.support.manager.aspect.annotations.ApiHandle;import com.imlianai.rpc.support.manager.aspect.annotations.LoginCheck;@Api("反馈")@Component("feedback")
public class CmdFeedBack extends RootCmd{
	
    @Resource
    private FeedbackService feedbackService;    	@ApiHandle	@Path("/api/feedback/getFAQ")	@ApiOperation(value = "【1.0.0】反馈常见问题接口", notes = "反馈常见问题", httpMethod = "POST", response = BaseRespVO.class)	public BaseRespVO getFAQ(BaseReqVO reqVO) {		List<FeedbackNormal> normals = feedbackService.getByOsType(reqVO.getOsType());		Map<String, Object> map = new HashMap<String, Object>();		map.put("faqs", normals);		return new BaseRespVO(map);	}    	@ApiHandle	@LoginCheck	@Path("/api/feedback/add")	@ApiOperation(value = "【1.0.0】添加反馈接口", notes = "添加反馈", httpMethod = "POST", response = BaseRespVO.class)	public BaseRespVO add(FeedBackReqVO vo) {		Feedback feedback = new Feedback(vo.getUid(), AppUtils.getNoXSS(vo.getContent()), vo.getFilename());		feedback.setCustomerId(vo.getCustomerId());		feedback.setPhone( AppUtils.getNoXSS(vo.getPhone()));		feedbackService.addFeedback(feedback);		return new BaseRespVO();	}	@ApiHandle	@LoginCheck	@Path("/api/feedback/getList")	@ApiOperation(value = "【1.0.0】获取反馈列表接口", notes = "获取反馈列表", httpMethod = "POST", response = FeedBackListRespVO.class)	public BaseRespVO getList(FeedBackListReqVO vo) {		FeedBackListRespVO respVO = new FeedBackListRespVO();		List<Feedback> list = feedbackService.getFeedbacks(vo.getUid(), vo.getPage());		if (list==null || list.isEmpty())			list = new ArrayList<Feedback>();		respVO.setList(list);		return respVO;	}		@ApiHandle	@LoginCheck	@Path("/api/feedback/getDetail")	@ApiOperation(value = "【1.0.0】获取反馈回复列表接口", notes = "获取反馈回复列表", httpMethod = "POST", response = FeedBackListRespVO.class)	public BaseRespVO getDetail(FeedBackDetailReqVO vo) {		FeedBackDetailRespVO respVO = new FeedBackDetailRespVO();		List<FeedbackReply> list = feedbackService.getFeedbackReplys(vo.getId(), vo.getPage());		if(list==null || list.isEmpty())			list = new ArrayList<FeedbackReply>();		respVO.setList(list);		return respVO;	}			@ApiHandle	@LoginCheck	@Path("/api/feedback/reply")	@ApiOperation(value = "【1.0.0】回复客服反馈接口", notes = "回复客服反馈", httpMethod = "POST", response = BaseRespVO.class)	public BaseRespVO reply(FeedBackReplyReqVO vo) {		Feedback feedback = feedbackService.getFeedbackById(vo.getId());		if(feedback.getUid() != vo.getUid())			return new BaseRespVO(ResCodeEnum.SYSTEM_ERROR);		feedbackService.addFeedbackReply(vo.getId(), AppUtils.getNoXSS(vo.getContent()), 				vo.getFilename(), 2, vo.getUid());		feedbackService.updateFeedbackStatus(vo.getId(), FeedBackStatus.NORESPONSED);		return new BaseRespVO();	}	}

