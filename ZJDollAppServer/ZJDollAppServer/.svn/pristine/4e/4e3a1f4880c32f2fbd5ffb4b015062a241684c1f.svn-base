package com.imlianai.zjdoll.app.modules.core.push.dao.impl;


import com.imlianai.dollpub.domain.coinfactory.MachinePushCoin;
import com.imlianai.rpc.support.manager.dbhandler.JdbcHandler;
import com.imlianai.zjdoll.app.modules.core.push.dao.PushCoinOptRouterDao;
import org.springframework.stereotype.Repository;

import javax.annotation.Resource;
import java.util.List;

/**
 * @author wurui
 * @create 2018-04-03 16:56
 **/
@Repository
public class PushCoinOptRouterDaoImpl implements PushCoinOptRouterDao {

    @Resource
    private JdbcHandler jdbcHandler;


    @Override
    public long insert(MachinePushCoin pushCoin) {
        String insert = "insert into push_coin_opt_88 (optId,deviceId,busId,uid,customerId,price,rate,time,startTime,endTime,createTime) " +
                "values(?,?,?,?,?,?,?,?,now(),date_add(now(),interval ? second),now())";
        return jdbcHandler.executeSql(insert,pushCoin.getOptId(),pushCoin.getDeviceId(),pushCoin.getBusId(),pushCoin.getUid(),pushCoin.getCustomerId(),pushCoin.getPrice(),pushCoin.getRate(),pushCoin.getTime(),pushCoin.getTime());
    }

    private String select = "SELECT * FROM push_coin_opt_88";

    @Override
    public MachinePushCoin getOne(long optId) {
        return jdbcHandler.queryOneBySql(MachinePushCoin.class,select + " WHERE optId=?",optId);
    }

    @Override
    public MachinePushCoin getOne(long optId, long uid) {
        return jdbcHandler.queryOneBySql(MachinePushCoin.class,select + " WHERE optId=? AND uid=?",optId,uid);
    }

    @Override
    public List<MachinePushCoin> getTimeOutRecord() {
        return jdbcHandler.queryBySql(MachinePushCoin.class,"select * from push_coin_opt_88 where endTime <= date_add(now(),interval time second) and state<>1");
    }

    @Override
    public int updateTimeOutStatus(int id) {
        return jdbcHandler.executeSql("update push_coin_opt_88 set state=1,endTime=now(),remark='定时器更新' where state<>1 and id=?",id);
    }


    @Override
    public int updateCoin(long optId, int eCoin,int vCoin, int type) {
        String intoCoin = "update push_coin_opt_88 set intoCoin=intoCoin+?,vIntoCoin=vIntoCoin+?,endTime=date_add(now(),interval time second) where state<>1 and optId=?";
        String outCoin = "update push_coin_opt_88 set outCoin=outCoin+?,vOutCoin=vOutCoin+?,endTime=date_add(now(),interval time second) where state<>1 and optId=?";
        //投币
        if (type == 0){
            return jdbcHandler.executeSql(intoCoin,eCoin,vCoin,optId);
        }
        //出币
        if (type == 1){
            return jdbcHandler.executeSql(outCoin,eCoin,vCoin,optId);
        }
        return 0;
    }

    @Override
    public int updateState(long optId) {
        return jdbcHandler.executeSql("UPDATE push_coin_opt_88 SET state=1,endTime=NOW() WHERE state<>1 AND optId=?",optId);
    }

    @Override
    public int updateJewel(int jewel,long optId) {
        return jdbcHandler.executeSql("update push_coin_opt_88 set jewel=jewel+?,endTime=date_add(now(),interval time second) where jewelStatus<>1 and state<>1 and optId=?",jewel,optId);
    }

    @Override
    public int updateJewelStatus(long optId) {
        return jdbcHandler.executeSql("UPDATE push_coin_opt_88 SET jewelStatus=1,endTime=NOW() WHERE jewelStatus<>1 AND optId=?",optId);
    }
}
