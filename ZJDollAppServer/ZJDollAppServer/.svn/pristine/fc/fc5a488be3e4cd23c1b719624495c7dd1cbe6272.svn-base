<!DOCTYPE html>
<html>

<head lang="en">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>增景RTMP</title>
    <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=0">
    <meta name="description" content="增景RTMP">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-title" content="增景RTMP">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta http-equiv="Cache-Control" content="no-siteapp">
    <meta http-equiv="Cache-Control" content="no-transform">
    <meta name="format-detection" content="telephone=no"/>
    <link rel="stylesheet" type="text/css" href="config/iview.css">
    <!-- 最新版本的 Bootstrap 核心 CSS 文件 -->
    <link rel="stylesheet" href="https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <!--<link rel="stylesheet" href="config/layui.css"  media="all">-->

    <style type="text/css">
        body {
            margin: 0;
            padding: 0;
            font-family: "Microsoft YaHei", YaHei, "微软雅黑", SimHei, "黑体";
            font-size: 14px
        }
    </style>
    <script src="https://cdn.bootcss.com/jquery/3.3.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue"></script>
    <!-- 最新的 Bootstrap 核心 JavaScript 文件 -->
    <script src="https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <!--<script src="config/layui.all.js" charset="utf-8"></script>-->
    <script type="text/javascript" src="config/iview.min.js"></script>
    <script type="text/javascript" src="config/ckplayer.js"></script>
</head>

<body>


<div class="container" style="width: 100%" id="ZJ_PLAYER">
    <div class="row clearfix">
        <div class="col-md-12 column">
            <div class="row clearfix">
                <div class="col-md-4 column" style="margin-top: 10px">
                    <Card style="height:900px;">
                        <p slot="title" style="height: 40px;width: 100%;margin-top: 20px">
                            <i-input  v-model="inputUrl" placeholder="请输入播放地址,目前支持格式有：rtmp,m3u8,flv,mp4,f4v,webm,ogg" style="width: 480px;margin-right: 10px"></i-input>
                            <i-button type="primary" icon="play" @click="play">播放</i-button>
                        </p>
                        <div id="video" style="height: 600px;margin-top: 10px"></div>
                        <!-- 进度条 -->
                    </Card>
                </div>
                <div class="col-md-8 column">
                    <template>
                        <Card style="height:900px;width: 100%;margin-top: 10px;">
                            <div slot="title" style="height: 450px;width: 100%;margin-top: 20px">
                                <i-table height="410" border :content="self" :columns="columns" :data="historyData" ></i-table>
                                <Page :total="dataCount" :page-size="pageSize" show-total class="paging" @on-change="changePage" style="margin-top: 10px;float: right"></Page>
                            </div>

                            <div style="margin-bottom: 5px;color: #494c4c;">
                                <span style="color:green;padding-top: 5px">上机状态列表</span>
                            </div>
                            <i-table height="310" border :content="self" :columns="operatorColumns" :data="operatorHistoryData"></i-table>
                            <Page :total="operatorDataCount" :page-size="operatorPageSize" show-total class="paging" @on-change="operatorChangePage" style="margin-top: 10px;float: right"></Page>
                        </Card>

                        <!-- 模态框 -->
                        <Modal
                                title="宝箱点送功能"
                                v-model="modalShow"
                                class-name="vertical-center-modal">


                        </Modal>
                    </template>
                </div>
            </div>
        </div>
    </div>
</div>



</body>

</html>

<script>
    var vm = new Vue({
        el: '#ZJ_PLAYER',
        data: {
            self: this,
            zjDollPubUrl: "http://localhost:9002",
            inputUrl: "",
            isStart:true,
            player: {},
            videoObject: {
                container: '#video', //容器的ID
                variable: 'player',
                autoplay: true, //是否自动播放
                loaded: 'loadedHandler', //当播放器加载后执行的函数
                flashplayer: false,
                video: "",
            },

            //以下是机器列表相关
            busList:[],
            ajaxHistoryData:[],
            historyData: [],
            dataCount:0,// 初始化信息总条数
            pageSize:7,// 每页显示多少条
            columns: [
                {title: '机器ID', key: 'busId',align: 'center', width: 75,},
                {title: '设备名', key: 'nickName', align: 'center', width: 100,},
                {
                    title: '单价',
                    key: 'price',
                    align: 'center',
                    width: 100,
                    render: function (h, params) {
                        return h('div',{style:{}},[h('span',params.row.price + "币/1次")],"")
                    }
                },
                {
                    title: '奖池/比率',
                    key: 'jackpot',
                    align: 'center',
                    width: 100,
                    render: function (h, params) {
                        return h('div',{style:{}},[h('span',params.row.type===0?"":params.row.jackpot + "/" + params.row.rate)],"")
                    }

                },
                {
                    title: '总投币/当前投币',
                    key: 'jackpot',
                    align: 'center',
                    width: 150,
                    render: function (h, params) {
                        return h('div',{style:{}},[h('span',params.row.type===0?"":params.row.total + "/" + params.row.current)],"")
                    }

                },
                {
                    title: '正面流',
                    key: 'stream1',
                    align: 'center',
                    width: 150,
                    render: function (h, params) {
                        return h('div', [
                            h('Button', {
                                props: {type: 'primary', size: 'small'},
                                style: {marginRight: '8px'},
                                on: {
                                    click: function () {
                                        vm.changeVideo(params.row.stream1)
                                    }
                                }
                            }, '播放正面流'),
                        ]);
                    }
                },
                {
                    title: '侧面流',
                    key: 'stream2',
                    width: 150,
                    align: 'center',
                    render: function (h, params) {
                        return h('div', [
                            h('Button', {
                                props: {type: 'primary', size: 'small'},
                                style: {marginRight: '8px'},
                                on: {
                                    click: function () {
                                        vm.changeVideo(params.row.stream2)
                                    }
                                }
                            }, '播放侧面流'),
                        ]);
                    }
                },
                {
                    title: '是否上架',
                    key: 'valid',
                    align: 'center',
                    render: function (h, params) {
                        if(params.row.valid===0){
                            return h('div',{style:{}},[h('span',{style:{color:'red'}},params.row.valid===0?"下架":"上架")],params.row.valid)
                        }else {
                            return h('div',{style:{}},[h('span',params.row.valid===0?"下架":"上架")],params.row.valid)
                        }
                    }
                },
                {
                    title: '当前机器状态',
                    key: 'status',
                    align: 'center',
                    render: function (h, params) {
                        return h('div',{style:{}},[h('span',params.row.status===0?"空闲":params.row.status===1?"游戏中":"故障")],params.row.valid)
                    }
                },
                {
                    title: '机器类型',
                    key: 'type',
                    align: 'center',
                    render: function (h, params) {
                        if(params.row.type===0){
                            return h('div',{style:{}},[h('span',{style:{color:''}},params.row.type===0?"娃娃机":params.row.type===1?"推币机":"骰子机")],params.row.valid)
                        }else {
                            return h('div',{style:{}},[h('span',{style:{color:'blue'}},params.row.type===0?"娃娃机":params.row.type===1?"推币机":"骰子机")],params.row.valid)
                        }

                    }
                },
            ],


            //以下是用户状态有关
            operatorList:[],
            operatorAjaxHistoryData:[],
            operatorHistoryData: [],
            operatorDataCount:0,// 初始化信息总条数
            operatorPageSize:3,// 每页显示多少条
            operatorColumns: [
                {
                    title: '机器',
                    key: 'busId',
                    align: 'center',
                    width: 180,
                    render: function (h, params) {
                        //娃娃机
                        if (params.row.type === 0){
                            return h('div',{style:{"text-align":"center"}}, [
                                    h('span',"ID：" + params.row.busId + "("  + params.row.nickName + ")"),h('br'),
                                    h('span',"单价：" + params.row.price + "币/1次"),h('br')
                                ],
                            )
                        }else if(params.row.type === 1){
                            return h('div',{style:{"text-align":"center"}}, [
                                    h('span',"机器ID：" + params.row.busId + " ("  + params.row.nickName + ") "),h('br'),
                                    h('span',"单价：" + params.row.price + "币/1次"),h('br'),
                                    h('span',"出奖：1币/" + params.row.rate + "钻"),h('br')
                                ],
                            )
                        }else {
                            return h('div',{style:{}},params.row.busId)
                        }
                    }
                },
                {
                    title: '机器类型',
                    key: 'type',
                    align: 'center',
                    width: 85,
                    render: function (h, params) {
                        if(params.row.type===0){
                            return h('div',{style:{}},[h('span',{style:{color:''}},"娃娃机")],params.row.type)
                        }else if (params.row.type===1){
                            return h('div',{style:{}},[h('span',{style:{color:'blue'}},"推币机")],params.row.type)
                        }else {
                            return h('div',{style:{}},[h('span',{style:{color:'blue'}},params.row.type===0?"娃娃机":params.row.type===1?"推币机":"骰子机")],params.row.type)
                        }
                    }
                },
                {
                    title: '当前用户操作',
                    key: 'optId',
                    align: 'center',
                    width: 220,
                    render: function (h, params) {
                        if (params.row.type===1){
                            return h('div',{style:{"text-align":"center"}}, [

                                h('span',"操作ID["), h('span',{style:{"color":"red"}},params.row.optId),h('span',"] 状态 : "),
                                h('span',{style:{"color":"red"}},params.row.state===0?'游戏中':'已结束'), h('br'),

                                h('span',"实体入币 : " + params.row.intoCoin + " , 虚拟入币 : " + params.row.vIntoCoin),h('br'),
                                h('span',"实体出币 : " + params.row.outCoin + " , 虚拟出币 : " + params.row.vOutCoin),h('br')
                                ],
                            )
                        }
                    }
                },
                {
                    title: '用户',
                    key: 'uid',
                    align: 'center',
                    width: 170,
                    render: function (h, params) {
                        return h('div',{style:{}},[h('span',params.row.uid + "(" + params.row.u_name + ")")])
                    }
                },
                {
                    title: '用户账户',
                    key: 'u_coin',
                    align: 'center',
                    width: 120,
                    height:100,
                    render: function (h, params) {
                        return h('div',{style:{"text-align":"center"}},
                            [h('span',"游戏币:" + params.row.u_coin),
                                [h('br')],
                                [h('span',"钻石:"+ params.row.u_jewel)],
                                [h('br')],
                                // [h('span',"碎片:"+ params.row.u_score)]
                            ],
                        )
                    }
                },
                {
                    title: '出奖钻石',
                    key: 'jewel',
                    align: 'center',
                    width: 130,
                    render: function (h, params) {
                        return h('div',{style:{}},
                            [
                                h('span',"已获得："),h('span',{style:{color:"red",fontSize:"15px"}},params.row.jewel),h("span"," 钻")
                            ],
                        )
                    }
                },

                {
                    title: '操作',
                    align: 'center',
                    render: function (h, params) {
                        var _this = vm;
                        //娃娃机
                        if (params.row.type === 0){
                            return h('div', [
                                h('Button', {
                                    props: {type: 'primary', size: 'small'},
                                    style: {marginRight: '8px',marginTop:'5px'},
                                    on: {
                                        click: function () {
                                            _this.changeVideo(params.row.s1);
                                        }
                                    }
                                }, '播放正面流'),
                                [h('br')],
                                h('Button', {
                                    props: {type: 'error', size: 'small'},
                                    style: {marginRight: '8px',marginTop:'5px',marginBottom:'5px'},
                                    on: {
                                        click: function () {
                                            _this.changeVideo(params.row.s2);
                                        }
                                    }
                                }, '播放侧面流'),
                            ]);

                        }else if (params.row.type === 1){ //推币机
                            return h('div', [
                                h('Button', {
                                    props: {type: 'primary', size: 'small'},
                                    style: {marginRight: '8px',marginTop:'5px'},
                                    on: {
                                        click: function () {
                                            _this.changeVideo(params.row.s1);
                                        }
                                    }
                                }, '播放视频'),
                                [h('br')],
                                h('Button', {
                                    props: {type: 'error', size: 'small'},
                                    style: {marginRight: '8px',marginTop:'5px',marginBottom:'5px'},
                                    on: {
                                        click: function () {
                                            console.info("123")
                                            _this.showModal()
                                        }
                                    }
                                }, '宝箱点送'),
                            ]);
                        }
                    }
                },
                {
                    title: '开始/结束',
                    key: 'startTime',
                    align: 'center',
                    width: 200,
                    render: function (h, params) {
                        return h('div',{style:{}},[
                            h('span',"开始：" + params.row.startTime),h("br"),
                            h('span',"结束：" + params.row.endTime)

                        ],"")
                    }
                }
            ],


            //模态框
            modalShow:false,
            isWhere:false,
            operatorRecordTime:{},

            param:{
                busId:"",
                optId:"",
                uid:""
            }

        },
        methods: {
            //动态获取uid和loginKey
            request(paramName) {
                var url = location.href;
                var paraString = url.substring(url.indexOf("?") + 1, url.length).split(
                    "&");
                var params = {};
                for (i = 0; j = paraString[i]; i++) {
                    params[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(
                        j.indexOf("=") + 1, j.length);
                }
                var returnValue = params[paramName.toLowerCase()];
                if (typeof(returnValue) == "undefined") {
                    return "";
                } else {
                    return returnValue;
                }
            },
            getBusList(){
                var _this = this;
                $.post("../api/doll/getDollBusList",function(data) {
                    var result = JSON.parse(data);
                    if(result.state) {
                        _this.busList = result.data.busList;
                        if (_this.busList && _this.busList.length > 0){
                            _this.handleListApproveHistory();
                            _this.getOperatorRecord();

                            setTimeout(function(){
                                _this.handleEntryPlayer();
                            },500);

                        }
                    }else {
                        console.info(result.msg)
                    }
                });
            },
            getOperatorRecord(){
                var _this = this;
                if(_this.param
                    && _this.param.busId !==""
                    && _this.param.optId !==""
                    && _this.param.uid !==""

                    && _this.param.busId !=="undefined"
                    && _this.param.optId !=="undefined"
                    && _this.param.uid !=="undefined"
                ){
                        console.log("ref=>getOperatorRecord");
                        $.post("../api/pushCoin/getOperatorRecord",JSON.stringify(_this.param),function(data) {
                            var result = JSON.parse(data);
                            if(result.state) {
                                _this.operatorList = [];
                                _this.operatorList.push(result.data.opt) ;
                                if (_this.operatorList && _this.operatorList.length > 0){
                                    _this.operatorHandleListApproveHistory();
                                    _this.isWhere = true;
                                    _this.operatorRecordTime = setTimeout(function(){
                                        //轮询
                                        if (_this.isWhere){
                                            _this.getOperatorRecord();
                                        }
                                    },5000);
                                }
                            }else {
                                console.info(result.msg);
                                clearTimeout(_this.operatorRecordTime);
                                _this.isWhere = false;
                            }
                        });
                }else {
                    console.info("未获取到参数~");
                    _this.isWhere = false;
                }
            },


            // -------------------------------机器列表相关分页操作----------------------------------
            handleListApproveHistory(){
                // 保存取到的所有数据
                var _this = this;
                _this.ajaxHistoryData = _this.busList;
                _this.dataCount = _this.busList.length;
                // 初始化显示，小于每页显示条数，全显，大于每页显示条数，取前每页条数显示
                if(_this.busList.length < _this.pageSize){
                    _this.historyData = _this.ajaxHistoryData;
                }else{
                    _this.historyData = _this.ajaxHistoryData.slice(0,_this.pageSize);
                }
            },
            changePage(index){
                var _this = this;
                var _start = ( index - 1 ) * _this.pageSize;
                var _end = index * _this.pageSize;
                _this.historyData = _this.ajaxHistoryData.slice(_start,_end);
            },

            // ------------------------------------------------------------------------------------




            // -------------------------------用户上机列表相关分页操作-------------------------------
            operatorHandleListApproveHistory(){
                // 保存取到的所有数据
                var _this = this;
                _this.operatorAjaxHistoryData = _this.operatorList;
                _this.operatorDataCount = _this.operatorList.length;
                // 初始化显示，小于每页显示条数，全显，大于每页显示条数，取前每页条数显示
                if(_this.operatorList.length < _this.pageSize){
                    _this.operatorHistoryData = _this.operatorAjaxHistoryData;
                }else{
                    _this.operatorHistoryData = _this.operatorAjaxHistoryData.slice(0,_this.operatorPageSize);
                }
            },
            operatorChangePage(index){
                var _this = this;
                var _start = ( index - 1 ) * _this.operatorPageSize;
                var _end = index * _this.operatorPageSize;
                _this.operatorHistoryData = _this.operatorAjaxHistoryData.slice(_start,_end);
            },

            // ------------------------------------------------------------------------------------


            //处理刚进入页面时
            handleEntryPlayer(){
                var _this = this;
                if(_this.isStart){
                    _this.isStart = false;
                    console.info("进入平台机器管理页");
                    _this.inputUrl = "";

                    if (_this.operatorList && _this.operatorList.length > 0){
                        _this.inputUrl = _this.operatorList[0].s1;
                        console.info("播放opt录像")
                    }else {
                        if (_this.busList && _this.busList.length > 0){
                            _this.inputUrl = _this.busList[0].stream1;
                            console.info("默认播放列表第一项")
                        }
                    }
                    if (_this.inputUrl !== ""){
                        _this.videoObject.video = _this.inputUrl;
                        this.player = new ckplayer(_this.videoObject);
                        if (_this.player && _this.player !== {}) {
                            console.info("初始化播放器")
                        }
                    }
                }
            },

            //播放按钮事件
            play(){
                var _this = this;
                if(_this.inputUrl && _this.inputUrl !== ""){
                    _this.changeVideo(_this.inputUrl)
                }else {
                    alert("请输入有效的播放地址!");
                }
            },

            //播放逻辑
            changeVideo(videoUrl) {
                console.info("开始播放:" + videoUrl)
                var _this = this;
                if (_this.player == null) {
                    return;
                }
                _this.inputUrl = videoUrl;
                _this.videoObject.video = videoUrl;
                _this.player = null;
                _this.player = new ckplayer();
                _this.player.embed(_this.videoObject);
            },

            showModal(){
                var _this = this;
                _this.modalShow = true;
            }

        },
        mounted() {
            var _this = this;
            _this.param.busId = _this.request("busId");
            _this.param.optId = _this.request("optId");
            _this.param.uid = _this.request("uid");
            console.info("param=>" + JSON.stringify(_this.param));
            _this.getBusList()
        }
    });

</script>