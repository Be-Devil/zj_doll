package com.imlianai.zjdoll.app.modules.core.push.controller;

import com.alibaba.dubbo.config.annotation.Reference;
import com.imlianai.dollpub.app.iface.IAppPushCoinRemoteService;
import com.imlianai.rpc.support.common.BaseLogger;
import com.imlianai.rpc.support.common.cmd.BaseReqVO;
import com.imlianai.rpc.support.common.cmd.BaseRespVO;
import com.imlianai.rpc.support.manager.aspect.annotations.ApiHandle;
import com.imlianai.rpc.support.manager.aspect.annotations.LoginCheck;
import com.imlianai.rpc.support.utils.StringUtil;
import com.imlianai.zjdoll.app.controller.RootCmd;
import com.imlianai.zjdoll.app.modules.core.doll.bus.DollBusService;
import com.imlianai.zjdoll.app.modules.core.doll.utils.zengjing.ZengjingUtils;
import com.imlianai.zjdoll.app.modules.core.push.consts.PushCoinConsts;
import com.imlianai.zjdoll.app.modules.core.push.service.PushCoinService;
import com.imlianai.zjdoll.app.modules.core.push.vo.CallbackReqVO;
import com.imlianai.zjdoll.app.modules.core.push.vo.OperateReqVO;
import com.imlianai.zjdoll.app.modules.core.push.vo.PushCoinBusQueryReqVO;
import com.imlianai.zjdoll.app.modules.core.trade.service.TradeChargeService;
import com.imlianai.zjdoll.app.modules.core.trade.service.TradeService;
import com.imlianai.zjdoll.app.modules.core.user.service.UserService;
import com.imlianai.zjdoll.domain.doll.DollBus;
import com.imlianai.zjdoll.domain.trade.TradeAccount;
import com.imlianai.zjdoll.domain.trade.TradeCostType;
import com.imlianai.zjdoll.domain.trade.TradeRecord;
import com.imlianai.zjdoll.domain.trade.TradeType;
import com.imlianai.zjdoll.domain.user.UserBase;
import org.springframework.stereotype.Component;

import javax.annotation.Resource;
import javax.ws.rs.Path;

/**
 * @author wurui
 * @create 2018-05-17 22:01
 **/
@Component("pushCoin")
public class CmdPushCoin extends RootCmd {

    private BaseLogger logger = BaseLogger.getLogger(getClass());

    @Reference
    private IAppPushCoinRemoteService iAppPushCoinRemoteService;

    @Resource
    private DollBusService dollBusService;

    @Resource
    private UserService userService;

    @Resource
    private TradeService  tradeService;

    @Resource
    private PushCoinService pushCoinService;

    /**
     * 上机
     *
     * @return
     */
    @LoginCheck
    @ApiHandle
    @Path("api/pushCoin/apply")
    public BaseRespVO apply(OperateReqVO vo) {
        return pushCoinService.apply(vo.getUid(),vo.getBusId(),vo.getCustomerId());
    }

    /**
     * 投币
     *
     * @return
     */
    @LoginCheck
    @ApiHandle
    @Path("api/pushCoin/push")
    public BaseRespVO push(OperateReqVO vo) {
        return pushCoinService.push(vo.getUid(),vo.getBusId(),vo.getCustomerId());
    }

    /**
     * 操作(摆动)
     *
     * @return
     */
    @LoginCheck
    @ApiHandle
    @Path("api/pushCoin/operate")
    public BaseRespVO operate(OperateReqVO vo) {
        return pushCoinService.operate(vo.getUid(),vo.getBusId());
    }

    /**
     * 主动下机
     *
     * @return
     */
    @LoginCheck
    @ApiHandle
    @Path("api/pushCoin/finish")
    public BaseRespVO finish(OperateReqVO vo) {
        return pushCoinService.finish(vo.getUid(),vo.getBusId(),vo.getCustomerId());
    }

    /**
     * 查询流水
     *
     * @param vo
     * @return
     */
    @LoginCheck
    @ApiHandle
    @Path("api/pushCoin/query")
    public BaseRespVO query(PushCoinBusQueryReqVO vo) {
        return pushCoinService.query(vo.getOptId(),vo.getCustomerId());
    }

    /**
     * 查账
     * @param vo
     * @return
     */
    @LoginCheck
    @ApiHandle
    @Path("api/pushCoin/queryAccount")
    public BaseRespVO queryAccount(BaseReqVO vo) {
        BaseRespVO respVO = new BaseRespVO(100,true,"数据请求成功");
        respVO.setData(tradeService.getAccount(vo.getUid()));
        return respVO;
    }

    @ApiHandle
    @Path("api/pushCoin/CoinToJewel")
    public BaseRespVO CoinToJewel(CallbackReqVO vo){
        if (!StringUtil.isNullOrEmpty(vo)){
            if (!StringUtil.isNullOrEmpty(vo.getAuto()) && vo.getAuto().equals(PushCoinConsts.SERVICE_AUTO)){
               if(pushCoinService.CoinToJewel(vo.getUid(),vo.getBusId(),vo.getOptId(),vo.getOutCoin(),vo.getIsFinal()) == 1) {
                   return new BaseRespVO(200,true,"数据请求成功");
               }else {
                   return new BaseRespVO(100,true,"数据请求成功");
               }
            }
        }
        return new BaseRespVO(0,false,"非法操作");
    }



}
